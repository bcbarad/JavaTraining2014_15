buildscript {
	ext {
		springBootVersion = '1.3.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'


war {
	baseName = 'grabber'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.seleniumhq.selenium:selenium-api:2.50.0') {
        transitive = false
    }
    compile('org.seleniumhq.selenium:selenium-remote-driver:2.50.0') {
        transitive = false
    }
    compile('io.appium:java-client:3.3.0') {
        transitive = false
    }
    // spring log4j
    compile ('org.springframework.boot:spring-boot-starter-log4j')
    
    configurations.all {
    	exclude module: 'slf4j-log4j12'
	}
    compile 'org.json:json:20151123'
    //compile('org.apache.pdfbox:pdfbox:2.0.2')
    compile('com.itextpdf:itextpdf:5.5.9')
    
    
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
